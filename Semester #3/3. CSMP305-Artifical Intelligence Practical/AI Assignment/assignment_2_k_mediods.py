# -*- coding: utf-8 -*-
"""K_mediods.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l_M1DgApUZH-_p8urQ555iw0w-UezOiH
"""

!pip install scikit-learn-extra

import numpy as np
from sklearn_extra.cluster import KMedoids
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import pandas as pd


# Sample data with 4 columns
dataset = pd.read_csv("/content/Iris.csv")
X_data = dataset.iloc[:,1:-1]
data = X_data.to_numpy()

# Step 1: Normalize the data
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)


clustering_score = []
for i in range(1, 11):
    kmedoids = KMedoids(n_clusters = i, init = 'random', random_state = 42)
    kmedoids.fit(data_scaled)
    clustering_score.append(kmedoids.inertia_) # inertia_ = Sum of squared distances of samples to their closest cluster center.


plt.figure(figsize=(10,6))
plt.plot(range(1, 11), clustering_score)
plt.scatter(5,clustering_score[4], s = 200, c = 'red', marker='*')
plt.title('The Elbow Method')
plt.xlabel('No. of Clusters')
plt.ylabel('Clustering Score')
plt.show()


# Step 2: Apply K-medoids
k = 5  # Choose the number of clusters
kmedoids = KMedoids(n_clusters=k, metric='euclidean', random_state=42)
labels = kmedoids.fit_predict(data_scaled)

# Step 3: Evaluate the clustering
print("Cluster labels:", labels)
print("Medoids:", kmedoids.cluster_centers_)
print("Silhouette Score:", silhouette_score(data_scaled, labels))

# Step 4: Reduce dimensions for visualization
pca = PCA(n_components=2)
data_2d = pca.fit_transform(data_scaled)

# Step 5: Plot the clusters
plt.figure(figsize=(8, 6))
for cluster in np.unique(labels):
    plt.scatter(data_2d[labels == cluster, 0], data_2d[labels == cluster, 1], label=f'Cluster {cluster}')

# Plot the medoids
medoid_2d = pca.transform(kmedoids.cluster_centers_)
plt.scatter(medoid_2d[:, 0], medoid_2d[:, 1], c='red', marker='X', s=200, label='Medoids')

plt.title('K-Medoids Clustering Visualization')
plt.xlabel('PCA Component 1')
plt.ylabel('PCA Component 2')
plt.legend()
plt.grid()
plt.show()